replicaCount: 1

DeadlineSeconds: 120

image:
  repository: esputnik/stripo-timer-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: 
  - name: dockerhub


serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: 
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "8080"


service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    memory: 512Mi
  requests:
    memory: 512Mi

nodeSelector: {}

env: 
  - name: APPNAME
    value: stripo-timer-api
  - name: ENV
    value: PLUGINS
  - name: PROFILE
    value: PLUGINS
  - name: SPRING_PROFILES_ACTIVE
    value: plugin-live
  - name: SPRING_CONFIG_NAME
    value: application,jdbc,log,base
  - name: SPRING_CONFIG_LOCATION
    value: file:///config/
  - name: JVM_MEMORY_OPTS
    value: -Dspring.cloud.config.enabled=false -Daws.secretsmanager.enabled=false
  - name: JAVA_TOOL_OPTIONS
    value: -Xss256k -Xms256m -Xmx400m -XX:ReservedCodeCacheSize=128M

configmap:
  enabled: true
  extraScrapeConfigs:
    application.properties: |
      spring.datasource.url=jdbc:postgresql://postgres:5432/stripo_plugin_local_timers
      spring.datasource.username=example
      spring.datasource.password=secret
      timer.url=http://countdowntimer:80/api/
      timer.username=Admin
      timer.password=secret
    log.properties: |
      logging.level.root=INFO
