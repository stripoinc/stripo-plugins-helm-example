{
  "theme":{
    "type":"CUSTOM", \\ set "DEFAULT" to use Stripo theme. Set "CUSTOM" to use params below
    "params":{
      "primary-color":"#93c47d",
      "secondary-color":"#ffffff",
      "border-radius-base":"5px",
      "customFontLink":"", \\ put here the link to your public custom font. Please check this article to get more information about the link requirements https://support.stripo.email/en/articles/3174076-how-to-add-manage-custom-fonts-to-email-templates
      "font-size":"9px",
      "font-family":"-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans, Ubuntu, Cantarell, \"Helvetica Neue\", sans-serif",
      "option-panel-background-color":"#cfe2f3",
      "default-font-color":"#38761d",
      "panels-border-color":"#0004cc"
    },
    "removePluginBranding":true \\ set false if you want to leave Stripo logo displayed within editor
  },
  "imageGallery":{
    "type":"PLUGIN", \\ active storage for uploaded images. It can be "PLUGIN" if you want to store images within plugin infrastructure; "AWS_S3" - for hosting images within configured AWS bucket (in this case the AWS credentials must be filled in); "AZURE" - for hosting images within configured Azure storage (in this case the Azure credentials must be filled in); "API" - for hosting images within your custom image storage (in this case the API object below should be enabled and filled in with credentials. Please read this article for more information https://stripo.email/plugin-api/#image-storage)
    "baseDownloadUrl":"https://example.server.com/", \\ you can leave this empty or remove at all if you don’t store the images with AWS
    "awsBucketName":"example.server.com", \\ you can leave this empty or remove at all if you don’t store the images with AWS
    "awsAccessKey":"AKIAZYH3333PRDOCZR3", \\ you can leave this empty or remove at all if you don’t store the images with AWS
    "awsSecretKey":"ty6aVWhDItI333wF2phckexBLLsuSsRdVJM", \\ you can leave this empty or remove at all if you don’t store the images with AWS
    "awsRegion":"eu-central-1", \\ you can leave this empty or remove at all if you don’t store the images with AWS
    "azureToken":"BlobEndpoint=https://test.blob.core.windows.net/;QueueEndpoint=https://test.queue.core.windows.net/;FileEndpoint=https://test.file.core.windows.net/;TableEndpoint=https://test.table.core.windows.net/;SharedAccessSignature=sv=2018-03-28&ss=bfqt&srt=sco&sp=rwdlacup&se=2020-03-15T16:42:40Z&st=2019-03-15T08:42:40Z&spr=https&sig=osrin55f5km2HA2%2BfKlWd6OMUByiIFbhtkM2b8dujGE%3D", \\ you can leave this empty or remove at all if you don’t store the images with Azure
    "api":{ \\ you can remove this object if you don’t have the custom storage activated for hosting your images.
      "enabled":true,
      "url":"https://example.com",
      "username":"username",
      "password":"password"
    },
    "tabs":[ \\ these are the folders that will be displayed on the UI within the editor. Please read this article https://stripo.email/plugin-api/#image-gallery-folders-configuration
      {
        "label":{
          "en":"Email" \\ name of the folder #1 in English
        },
        "key":"${userId}_${projectId}",
        "role":"ADMIN" \\ role of the user to MANAGE (remove/upload/modify) the images. Can be USER or ADMIN only
      },
      {
        "label":{
          "en":"Users", \\ name of the folder #2 in English
          "de":"folder 2", \\ in other languages
          "es":"folder 2",
          "fr":"folder 2",
          "it":"folder 2",
          "ru":"folder 2",
          "uk":"folder 2",
          "sl":"folder 2"
        },
        "key":"${userId}"
      },
      {
        "label":{
          "en":"Project",
          "de":"folder 3",
          "es":"folder 3",
          "fr":"folder 3",
          "it":"folder 3",
          "ru":"folder 3",
          "uk":"folder 3",
          "sl":"folder 3"
        },
        "key":"${projectId}",
        "role":"ADMIN"
      }
    ],
    "maxFileSizeInKBytes":8192, \\ Max size of 1 uploaded image by customer within editor
    "imagesBankEnabled":true, \\ enables/disables the Stock image library
    "imagesBankLabel":{
      "en":"Stock" \\ the name of the folder with stock images in English, please add other languages if needed
    },
    "pexelsEnabled":true,  \\ enables/disables the Pexels.com stock provider for searching stock images
    "pexelsKey":"pexels_key", \\ provide here the key taken on Pexels.com provider
    "pixabayEnabled":true,  \\ enables/disables the Pixabay.com stock provider for searching stock images
    "pixabayKey":"pixabay_key", \\ provide here the key taken on Pixabay.com provider
    "iconFinderEnabled":true,  \\ enables/disables the Iconfinder.com stock provider for searching stock images
    "iconFinderKey":"iconFinder_key",  \\ provide here the key taken on Iconfinder.com provider
    "imageSearchEnabled":true, \\ option that activates option to search stock images within editor
    "iconSearchEnabled":true, \\ option that activates option to search stock icons within editor
    "skipChunkedTransferEncoding":false \\ By default, when sending images from the frontend to the configured custom storage server, we use the “Chunked transfer encoding” mechanism.(https://en.wikipedia.org/wiki/Chunked_transfer_encoding).
          At the same time, we do not need to first upload the entire picture to the editor's server into memory, and then send it further to the custom storage server. We redirect the entire data stream at once, which goes from the front to the server of the custom storage and do not know when this stream will end. When the front says that the downloading is completed, then the request stops, and while there is no response, we send chunks of bytes (chunks).
          But there are some plugin users whose server does not know how to work with this technology. And the server needs to know in advance what size the request goes to it (usually these are servers written in php). In this case, we first need to upload the entire image to our server into memory, determine its size, and only after that send it to the custom storage server.
          In order for our backend to adapt to each plugin individually, such a flag was invented. Please set it as false by default.
  },
  "blocksLibrary":{
    "enabled":true,  \\ activates/deactivates the Modules section within editor (ability to use and save modules)
    "tabs":[  \\ these are the folders that will be displayed on the UI within the editor. Please read this article https://stripo.email/plugin-api/#modules-library
      {
        "viewOrder":0, \\ order of the folder
        "label":{
          "en":"My modules" \\ the name of the folder #1 in English, please add the names in other languages if needed
        },
        "key":"user_${UserId}"
      },
      {
        "viewOrder":0,
        "label":{
          "en":"Template Modules",
          "de":"folder 2",
          "es":"folder 2",
          "fr":"folder 2",
          "it":"folder 2",
          "ru":"folder 2",
          "uk":"folder 2",
          "sl":"folder 2"
        },
        "key":"user_${templateId}",
        "role":"ADMIN"  \\ role of the user to MANAGE (remove/upload/modify) the modules. Can be USER or ADMIN only
      },
      {
        "viewOrder":0,
        "label":{
          "en":"Pre-Built",
          "pt":"folder 3",
          "de":"folder 3",
          "es":"folder 3",
          "fr":"folder 3",
          "it":"folder 3",
          "ru":"folder 3",
          "uk":"folder 3",
          "sl":"folder 3"
        },
        "key":"user_54958294924",
        "role":"ADMIN"
      }
    ],
    "view":"FULL_WIDTH" \\ this is way how the modules will be displayed within editor: grid (set the NET) or full width (set the FULL_WIDTH)
  },
  "baseBlocks":{  \\enables/deactivates particular basic block
    "imageEnabled":true,
    "textEnabled":true,
    "buttonEnabled":true,
    "spacerEnabled":true,
    "videoEnabled":true,
    "socialNetEnabled":true,
    "bannerEnabled":false,
    "menuEnabled":false,
    "htmlEnabled":true,
    "timerEnabled":false
  },
  "blockControls":{ \\ enables/deactivates extra (advanced) controls. They are listed here https://stripo.email/plugin-api/#advanced-controls-settings
    "blockVisibilityEnabled":false,
    "mobileIndentPluginEnabled":false,
    "mobileInversionEnabled":false,
    "mobileAlignmentEnabled":false,
    "stripePaddingEnabled":false,
    "containerBackgroundEnabled":false,
    "structureBackgroundImageEnabled":false,
    "containerBackgroundImageEnabled":false,
    "dynamicStructuresEnabled":false,
    "imageSrcLinkEnabled":false,
    "smartBlocksEnabled":true,
    "imageEditorPluginEnabled":true
  },
  "permissionsApi":{ \\ option allows to activate the Permissions Checker API described here https://stripo.email/plugin-api/#permissions-checker-api
    "enabled":true,
    "url":"https://example.com",
    "username":"username",
    "password":"userpassword"
  },
  "ai": {
    "openAiApiKey": "", \\ OpenAI API Key
    "textBlockAiEnabled": true, \\ option activates/disables AI for Text block
    "smartModuleAiEnabled": true \\ option activates/disables AI for Smart modules
  },
  "mergeTagsEnabled":true, \\ option activates/disables the ability to see and use the merge tags within editor https://stripo.email/plugin-api/#merge-tags
  "specialLinksEnabled":true, \\ option activates/disables the ability to see and use the special links within editor https://stripo.email/plugin-api/#special-links
  "customFontsEnabled":true, \\ option activates/disables the ability to see and use custom fonts within editor https://stripo.email/plugin-api/#fonts-management
  "ownControls":true, \\ option allows you to create own controls that will be displayed in the editor. Example: https://github.com/ardas/stripo-plugin-samples/tree/master/external-link-control-sample
  "autoSaveApi":{ \\ option allows to activate the auto saving feature https://stripo.email/plugin-api/#autosave-option
    "enabled":true,
    "url":"https://example.com",
    "username":"username",
    "password":"userpassword"
  },
  "undoEnabled":true, \\ option allows to activate/deactivate the undo/redo actions https://stripo.email/plugin-api/#undo-redo-actions
  "versionHistoryEnabled":true  \\ option allows to activate/deactivate the Version History feature https://stripo.email/plugin-api/#version-history
}
